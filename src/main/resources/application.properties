spring.application.name=cv-generator

# Database Configuration - PostgreSQL
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/cv?createDatabaseIfNotExist=true}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:dimpsonteam2256}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate ??? PostgreSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html

# File Upload
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.main.allow-circular-references=true

# Cloudinary Configuration
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME:dimpson}
cloudinary.api-key=${CLOUDINARY_API_KEY:842136177663137}
cloudinary.api-secret=${CLOUDINARY_API_SECRET:IjA99Xl6K8BhzHHwVFDlrjG1vMk}

# Server port ??? Render
server.port=${PORT:8080}

# Production logging
logging.level.org.springframework.security=INFO
logging.level.com.example.cvgenerator=INFO