/**
 * Upload Photo Handler –¥–ª—è CV Generator
 * –û–±—Ä–æ–±–ª—è—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π
 */

document.addEventListener('DOMContentLoaded', function() {
    const photoInput = document.getElementById('photo');
    const fileLabel = document.getElementById('file-label');
    const fileInfo = document.getElementById('file-info');
    const fileName = document.getElementById('file-name');
    const fileSize = document.getElementById('file-size');
    const clearButton = document.getElementById('clear-file');

    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
    const MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB
    const ALLOWED_TYPES = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];

    /**
     * –§–æ—Ä–º–∞—Ç—É—î —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É –≤ –∑—Ä—É—á–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç
     */
    function formatFileSize(bytes) {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å —Ñ–∞–π–ª—É
     */
    function validateFile(file) {
        const errors = [];

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∏–ø—É —Ñ–∞–π–ª—É
        if (!ALLOWED_TYPES.includes(file.type)) {
            errors.push('–î–æ–∑–≤–æ–ª–µ–Ω—ñ —Ç—ñ–ª—å–∫–∏ —Ñ–∞–π–ª–∏ –∑–æ–±—Ä–∞–∂–µ–Ω—å (JPG, PNG, WebP)');
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–∑–º—ñ—Ä—É —Ñ–∞–π–ª—É
        if (file.size > MAX_FILE_SIZE) {
            errors.push(`–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É: ${formatFileSize(MAX_FILE_SIZE)}`);
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É
        if (file.size < 1024) {
            errors.push('–§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –º–∞–ª–∏–π');
        }

        return {
            isValid: errors.length === 0,
            errors: errors
        };
    }

    /**
     * –û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ñ–∞–π–ª
     */
    function updateFileInfo(file) {
        const validation = validateFile(file);
        const sizeFormatted = formatFileSize(file.size);

        fileName.textContent = file.name;

        if (validation.isValid) {
            fileSize.innerHTML = `<span style="color: #28a745;">
                <i class="bi bi-check-circle"></i> –†–æ–∑–º—ñ—Ä: ${sizeFormatted} - –ì–æ—Ç–æ–≤–æ –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            </span>`;
            fileInfo.style.borderLeft = '4px solid #28a745';
            fileInfo.style.backgroundColor = '#d4edda';
        } else {
            fileSize.innerHTML = `<span style="color: #dc3545;">
                <i class="bi bi-exclamation-triangle"></i> ${validation.errors.join(', ')}
            </span>`;
            fileInfo.style.borderLeft = '4px solid #dc3545';
            fileInfo.style.backgroundColor = '#f8d7da';
        }

        return validation.isValid;
    }

    /**
     * –û–Ω–æ–≤–ª—é—î —Å—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
     */
    function updateButtonStyle(isFileSelected, isValid = true) {
        if (isFileSelected && isValid) {
            fileLabel.style.backgroundColor = '#d4edda';
            fileLabel.style.borderColor = '#28a745';
            fileLabel.style.color = '#155724';
            fileLabel.innerHTML = '<i class="bi bi-check"></i> –§–∞–π–ª –æ–±—Ä–∞–Ω–æ';
        } else if (isFileSelected && !isValid) {
            fileLabel.style.backgroundColor = '#f8d7da';
            fileLabel.style.borderColor = '#dc3545';
            fileLabel.style.color = '#721c24';
            fileLabel.innerHTML = '<i class="bi bi-exclamation-triangle"></i> –ü–æ–º–∏–ª–∫–∞ —Ñ–∞–π–ª—É';
        } else {
            resetButtonStyle();
        }
    }

    /**
     * –°–∫–∏–¥–∞—î —Å—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏ –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
     */
    function resetButtonStyle() {
        fileLabel.style.backgroundColor = '#f0f0f0';
        fileLabel.style.borderColor = '#ddd';
        fileLabel.style.color = '#333';

        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
        const isEditing = document.querySelector('[data-cv-editing="true"]');
        if (isEditing) {
            fileLabel.innerHTML = '–û–±—Ä–∞—Ç–∏ –Ω–æ–≤–µ —Ñ–æ—Ç–æ';
        } else {
            fileLabel.innerHTML = '–í–∏–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª';
        }
    }

    /**
     * –û—á–∏—â–∞—î –æ–±—Ä–∞–Ω–∏–π —Ñ–∞–π–ª
     */
    function clearFile() {
        photoInput.value = '';
        fileInfo.style.display = 'none';
        resetButtonStyle();

        console.log('üì∑ File cleared by user');
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –≤–∏–±—ñ—Ä —Ñ–∞–π–ª—É
     */
    function handleFileSelection() {
        if (this.files && this.files[0]) {
            const file = this.files[0];

            console.log('üì∑ File selected:', {
                name: file.name,
                size: file.size,
                type: file.type,
                lastModified: new Date(file.lastModified).toLocaleString()
            });

            const isValid = updateFileInfo(file);
            updateButtonStyle(true, isValid);
            fileInfo.style.display = 'block';

            // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è —á–µ—Ä–µ–∑ FileReader –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —â–æ —Ñ–∞–π–ª –¥—ñ–π—Å–Ω–æ —î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º
            if (isValid && file.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    console.log('üì∑ File successfully read, size:', e.target.result.length, 'bytes');
                };
                reader.onerror = function() {
                    console.error('üì∑ Error reading file');
                    fileSize.innerHTML = '<span style="color: #dc3545;">–ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É</span>';
                };
                reader.readAsDataURL(file);
            }
        } else {
            clearFile();
        }
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    if (!photoInput || !fileLabel || !fileInfo || !fileName || !fileSize || !clearButton) {
        console.warn('üì∑ Photo upload: –ù–µ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ');
        return;
    }

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
    photoInput.addEventListener('change', handleFileSelection);
    clearButton.addEventListener('click', clearFile);

    // –ï—Ñ–µ–∫—Ç–∏ hover –¥–ª—è –∫–Ω–æ–ø–∫–∏
    fileLabel.addEventListener('mouseenter', function() {
        if (!photoInput.files || !photoInput.files[0]) {
            this.style.backgroundColor = '#e2e6ea';
        }
    });

    fileLabel.addEventListener('mouseleave', function() {
        if (!photoInput.files || !photoInput.files[0]) {
            this.style.backgroundColor = '#f0f0f0';
        }
    });

    // Drag & Drop —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å
    fileLabel.addEventListener('dragover', function(e) {
        e.preventDefault();
        this.style.backgroundColor = '#e2e6ea';
        this.style.borderColor = '#007bff';
    });

    fileLabel.addEventListener('dragleave', function(e) {
        e.preventDefault();
        if (!photoInput.files || !photoInput.files[0]) {
            this.style.backgroundColor = '#f0f0f0';
            this.style.borderColor = '#ddd';
        }
    });

    fileLabel.addEventListener('drop', function(e) {
        e.preventDefault();

        const files = e.dataTransfer.files;
        if (files.length > 0) {
            photoInput.files = files;
            handleFileSelection.call(photoInput);
        }

        this.style.backgroundColor = '#f0f0f0';
        this.style.borderColor = '#ddd';
    });

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏ –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é
    const form = document.getElementById('cvForm') || document.querySelector('form');
    if (form) {
        form.addEventListener('submit', function(e) {
            if (photoInput.files && photoInput.files[0]) {
                const validation = validateFile(photoInput.files[0]);
                if (!validation.isValid) {
                    e.preventDefault();
                    alert('–ü–æ–º–∏–ª–∫–∞ –∑ —Ñ–∞–π–ª–æ–º —Ñ–æ—Ç–æ: ' + validation.errors.join(', '));
                    return false;
                }

                console.log('üì∑ Valid photo file will be submitted');
            }
        });
    }

    console.log('üì∑ Photo upload handler initialized successfully');
});